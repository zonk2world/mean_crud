{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/person-add/person-add.component.css","webpack:///./src/app/person-add/person-add.component.html","webpack:///./src/app/person-add/person-add.component.ts","webpack:///./src/app/person-edit/person-edit.component.css","webpack:///./src/app/person-edit/person-edit.component.html","webpack:///./src/app/person-edit/person-edit.component.ts","webpack:///./src/app/person-get/person-get.component.css","webpack:///./src/app/person-get/person-get.component.html","webpack:///./src/app/person-get/person-get.component.ts","webpack:///./src/app/person.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PersonAddComponent } from './person-add/person-add.component';\nimport { PersonEditComponent } from './person-edit/person-edit.component';\nimport { PersonGetComponent } from './person-get/person-get.component';\n\nconst routes: Routes = [\n  {\n    path: 'person/create',\n    component: PersonAddComponent\n  },\n  {\n    path: 'person/edit/:id',\n    component: PersonEditComponent\n  },\n  {\n    path: 'person',\n    component: PersonGetComponent\n  },\n  {\n    path: '',\n    redirectTo: '/person',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","module.exports = \"@import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\\n\\nbody {\\n    font-family: 'Roboto', sans-serif;\\n}\\n\\nh1 {\\n    text-align:center;\\n}\\n\\nh2 {\\n    text-align: center;\\n}\\n\\n.nav-item {\\n    visibility: hidden;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMEVBQTBFOztBQUUxRTtJQUNJLGlDQUFpQztBQUNyQzs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Sb2JvdG8mZGlzcGxheT1zd2FwJyk7XG5cbmJvZHkge1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbn1cblxuaDEge1xuICAgIHRleHQtYWxpZ246Y2VudGVyO1xufVxuXG5oMiB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ubmF2LWl0ZW0ge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cbiJdfQ== */\"","module.exports = \"<ng2-slim-loading-bar color=\\\"blue\\\"></ng2-slim-loading-bar>\\n\\n<nav class=\\\"navbar navbar-expand-sm bg-light\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"person/create\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n          Create Person\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"person\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n          Person\\n        </a>\\n      </li> \\n    </ul>\\n  </div>\\n</nav>\\n<br />\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SlimLoadingBarService } from 'ng2-slim-loading-bar';\nimport { PersonService } from '../app/person.service';\n\nimport { NavigationCancel,\n        Event,\n        NavigationEnd,\n        NavigationError,\n        NavigationStart,\n        Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit{\n\n  title = 'mean_table';\n  version;\n\n  constructor (\n    private _loadingBar: SlimLoadingBarService,\n    private _router: Router,\n    private bs: PersonService\n  ) {\n    this._router.events.subscribe((event: Event) => {\n      this.navigationInterceptor(event);\n    });\n  }\n\n  ngOnInit() {\n\n  }\n\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this._loadingBar.start();\n    }\n    if (event instanceof NavigationEnd) {\n      this._loadingBar.complete();\n    }\n    if (event instanceof NavigationCancel) {\n      this._loadingBar.stop();\n    }\n    if (event instanceof NavigationError) {\n      this._loadingBar.stop();\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SlimLoadingBarModule } from 'ng2-slim-loading-bar';\n\nimport { AppComponent } from './app.component';\nimport { PersonAddComponent } from './person-add/person-add.component';\nimport { PersonGetComponent } from './person-get/person-get.component';\nimport { PersonEditComponent } from './person-edit/person-edit.component';\n\nimport { PersonService } from './person.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PersonAddComponent,\n    PersonGetComponent,\n    PersonEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SlimLoadingBarModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [ PersonService ],\n  bootstrap: [ AppComponent ]\n})\n\nexport class AppModule { }\n","module.exports = \".card {\\n  box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.1);\\n}\\n\\nlabel {\\n  padding: 0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGVyc29uLWFkZC9wZXJzb24tYWRkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwwQ0FBMEM7QUFDNUM7O0FBRUE7RUFDRSxVQUFVO0FBQ1oiLCJmaWxlIjoic3JjL2FwcC9wZXJzb24tYWRkL3BlcnNvbi1hZGQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcbiAgYm94LXNoYWRvdzogMHB4IDVweCA1cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xufVxuXG5sYWJlbCB7XG4gIHBhZGRpbmc6IDA7XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">First Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"first_name\\\" #first_name/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['first_name'].invalid && (angForm.controls['first_name'].dirty || angForm.controls['first_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['first_name'].errors.required\\\">\\n          First Name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Last Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"last_name\\\" #last_name />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['last_name'].invalid && (angForm.controls['last_name'].dirty || angForm.controls['last_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['last_name'].errors.required\\\">\\n          Last Name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" #email />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['email'].invalid && (angForm.controls['email'].dirty || angForm.controls['email'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['email'].errors.required\\\">\\n          Email is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"addPerson(first_name.value, last_name.value, email.value)\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\" \\n        class=\\\"btn btn-primary\\\">Add Person</button>\\n        <button (click)=\\\"goBack()\\\" class=\\\"btn btn-light ml-2\\\">Cancel</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { PersonService } from '../person.service';\n\n@Component({\n  selector: 'app-person-add',\n  templateUrl: './person-add.component.html',\n  styleUrls: ['./person-add.component.css']\n})\n\nexport class PersonAddComponent implements OnInit {\n\n  angForm: FormGroup;\n  constructor(\n    private fb: FormBuilder,\n    private ps: PersonService,\n    private router: Router\n  ) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      first_name: ['', Validators.required ],\n      last_name: ['', Validators.required ],\n      email: ['', Validators.required ]\n    });\n  }\n\n  addPerson(first_name, last_name, email) {\n    this.ps.addPerson(first_name, last_name, email)\n      .subscribe((res) => {\n        this.router.navigate(['person'])\n      })\n  }\n\n  goBack() {\n    this.router.navigate(['person']);\n  }\n\n  ngOnInit() {\n\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbi1lZGl0L3BlcnNvbi1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">First Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"first_name\\\" #first_name [(ngModel)] = \\\"person.first_name\\\" />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['first_name'].invalid && (angForm.controls['first_name'].dirty || angForm.controls['first_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['first_name'].errors.required\\\">\\n          First Name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Last Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"last_name\\\" #last_name [(ngModel)] = \\\"person.last_name\\\" />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['last_name'].invalid && (angForm.controls['last_name'].dirty || angForm.controls['last_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['last_name'].errors.required\\\">\\n          Last Name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" #email [(ngModel)] = \\\"person.email\\\" />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['email'].invalid && (angForm.controls['email'].dirty || angForm.controls['email'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['email'].errors.required\\\">\\n          Email is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"updatePerson(first_name.value, last_name.value, email.value)\\\"\\n        [disabled]=\\\"angForm.invalid\\\" \\n        class=\\\"btn btn-primary\\\">Update Person</button>\\n        <button (click)=\\\"goBack()\\\" class=\\\"btn btn-light ml-2\\\">Cancel</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { PersonService } from '../person.service';\n\n@Component({\n  selector: 'app-person-edit',\n  templateUrl: './person-edit.component.html',\n  styleUrls: ['./person-edit.component.css']\n})\n\nexport class PersonEditComponent implements OnInit {\n\n  angForm: FormGroup;\n  person: any = {};\n\n  constructor (\n    private route: ActivatedRoute,\n    private router: Router,\n    private ps: PersonService,\n    private fb: FormBuilder\n  ) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      first_name: ['', Validators.required ],\n      last_name: ['', Validators.required ],\n      email: ['', Validators.required ]\n    });\n  }\n\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.ps.editPerson(params['id']).subscribe(res => {\n        this.person = res;\n      });\n    });\n  }\n\n  updatePerson(first_name, last_name, email) {\n    this.route.params.subscribe(params => {\n      this.ps.updatePerson(first_name, last_name, email, params['id'])\n        .subscribe((res) => {\n          this.router.navigate(['person'])\n        })\n    });\n  }\n\n  goBack() {\n    this.router.navigate(['person']);\n  }\n}\n","module.exports = \".table td,\\n.table th {\\n  font-family: 'Roboto', sans-serif;\\n  vertical-align: middle;\\n}\\n\\n.table thead td {\\n  font-weight: 600;\\n}\\n\\n.btn > i {\\n  color: #fff;\\n  cursor: pointer;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGVyc29uLWdldC9wZXJzb24tZ2V0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUsaUNBQWlDO0VBQ2pDLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvcGVyc29uLWdldC9wZXJzb24tZ2V0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGFibGUgdGQsXG4udGFibGUgdGgge1xuICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi50YWJsZSB0aGVhZCB0ZCB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG5cbi5idG4gPiBpIHtcbiAgY29sb3I6ICNmZmY7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbiJdfQ== */\"","module.exports = \"<a routerLink=\\\"create\\\" class=\\\"btn btn-info mb-4 float-sm-right\\\" routerLinkActive=\\\"active\\\">\\n  Add New Row\\n</a>\\n\\n<table class=\\\"table table-striped table-hover\\\">\\n  <thead>\\n  <tr>\\n      <td>Firstname</td>\\n      <td>Lastname</td>\\n      <td>Email</td>\\n      <td colspan=\\\"2\\\"></td>\\n  </tr>\\n  </thead>\\n\\n  <tbody>\\n      <tr *ngFor=\\\"let person of persones\\\">\\n          <td>{{ person.first_name }}</td>\\n          <td>{{ person.last_name }}</td>\\n          <td>{{ person.email }}</td>\\n          <td class=\\\"text-right\\\">\\n            <div class=\\\"btn-group\\\">\\n              <a [routerLink]=\\\"['edit', person._id]\\\" class=\\\"btn btn-info\\\">\\n                <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n              </a>\\n              <a (click) = \\\"deletePerson(person._id)\\\" class=\\\"btn btn-info\\\">\\n                <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n              </a>\\n            </div>\\n          </td>\\n      </tr>\\n  </tbody>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport Person from '../Person';\nimport { PersonService } from '../person.service';\n\n@Component({\n  selector: 'app-person-get',\n  templateUrl: './person-get.component.html',\n  styleUrls: ['./person-get.component.css']\n})\n\nexport class PersonGetComponent implements OnInit {\n\n  persones: Person[];\n\n  constructor(private ps: PersonService) {\n   }\n\n  ngOnInit() {\n    this.updateView()\n  }\n\n  updateView() {\n    this.ps\n      .getPersones()\n      .subscribe((data: Person[]) => {\n        this.persones = data;\n        console.log('updated')\n    });\n  }\n\n  deletePerson(id) {\n    this.ps.deletePerson(id).subscribe(res => {\n      this.updateView()\n      // console.log('Deleted');\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PersonService {\n\n  uri = 'http://localhost:4000/person';\n\n  constructor( private http: HttpClient ) { }\n\n  addPerson(first_name, last_name, email) {\n    const obj = {\n      first_name: first_name,\n      last_name: last_name,\n      email: email\n    };\n\n    return this\n          .http\n          .post(`${this.uri}/add`, obj);\n  }\n\n  getPersones() {\n    return this\n           .http\n           .get(`${this.uri}`);\n  }\n\n  editPerson(id) {\n    return this\n           .http\n           .get(`${this.uri}/edit/${id}`);\n  }\n\n  updatePerson(first_name, last_name, email, id) {\n    const obj = {\n        first_name: first_name,\n        last_name: last_name,\n        email: email\n    };\n\n    return this\n      .http\n      .post(`${this.uri}/update/${id}`, obj);\n  }\n\n  deletePerson(id) {\n    return this\n           .http\n           .get(`${this.uri}/delete/${id}`);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}